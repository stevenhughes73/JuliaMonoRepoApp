name: CI
on:
  push:
  pull_request:

jobs:
  test:
    name: test-${{ matrix.pkg }}-julia-1.11
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        pkg: [TheForce, TheEmpire, TheResistance, StarWarsApp]
    defaults:
      run:
        working-directory: ${{ github.workspace }}/${{ matrix.pkg }}
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'

      - name: Setup dependencies
        shell: bash
        run: |
          julia --project=. -e '
            using Pkg
            Pkg.activate(".")
            pkg = basename(pwd())
            println("Setting up dependencies for: ", pkg)
            
            # For StarWarsApp, remove existing local package deps first
            if pkg == "StarWarsApp"
              println("Removing existing local package dependencies...")
              for dep in ["TheForce", "TheEmpire", "TheResistance"]
                try
                  Pkg.rm(dep)
                  println("Removed ", dep)
                catch e
                  println("Could not remove ", dep, ": ", e)
                end
              end
            end
            
            # Now develop local packages
            if pkg != "TheForce"
              println("Developing TheForce...")
              Pkg.develop(path=joinpath(pwd(), "..", "TheForce"))
              println("TheForce developed successfully")
            end
            
            if pkg == "StarWarsApp"
              println("Developing TheEmpire...")
              Pkg.develop(path=joinpath(pwd(), "..", "TheEmpire"))
              println("TheEmpire developed successfully")
              
              println("Developing TheResistance...")
              Pkg.develop(path=joinpath(pwd(), "..", "TheResistance"))
              println("TheResistance developed successfully")
            end
            
            # Add Coverage for LCOV generation
            println("Adding Coverage...")
            Pkg.add("Coverage")
            
            # Instantiate AFTER developing local packages
            println("Running instantiate...")
            Pkg.instantiate()
            println("Setup complete!")
          '

      - name: Test with coverage
        run: julia --project=. --code-coverage=user -e 'using Pkg; Pkg.test(coverage=true)'

      - name: LCOV artifact
        run: julia --project=. -e 'using Coverage; LCOV.writefile(joinpath(ENV["GITHUB_WORKSPACE"], "lcov-${{ matrix.pkg }}.info"), process_folder("src"))'
        
      - uses: actions/upload-artifact@v4
        with:
          name: lcov-${{ matrix.pkg }}
          path: lcov-${{ matrix.pkg }}.info
        
  coverage:
    name: aggregate-coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all coverage artifacts
        uses: actions/download-artifact@v4
        with:
          path: coverage-files
          
      - name: Combine coverage files
        run: |
          # Create combined LCOV file
          find coverage-files -name "*.info" -exec cat {} \; > combined-coverage.info
          echo "Combined coverage file created"
          ls -la combined-coverage.info
          
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: combined-coverage.info
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  docs:
    name: documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write 
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'
          
      - name: Install dependencies
        run: |
          julia --project=docs -e '
            using Pkg
            
            # Only keep Documenter, remove any local packages if they exist
            for dep in ["TheForce", "TheEmpire", "TheResistance", "StarWarsApp"]
              try
                Pkg.rm(dep)
                println("Removed ", dep)
              catch e
                println("Could not remove ", dep, ": ", e)
              end
            end
            
            # Develop all local packages in dependency order
            println("Developing TheForce...")
            Pkg.develop(PackageSpec(path="TheForce"))
            
            println("Developing TheEmpire...")
            Pkg.develop(PackageSpec(path="TheEmpire"))
            
            println("Developing TheResistance...")
            Pkg.develop(PackageSpec(path="TheResistance"))
            
            println("Developing StarWarsApp...")
            Pkg.develop(PackageSpec(path="StarWarsApp"))
            
            println("Running instantiate...")
            Pkg.instantiate()
            println("Docs setup complete!")
          '

      - name: Build and deploy docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: julia --project=docs docs/make.jl

  docs-theforce:
    name: docs-theforce
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1.11'
          
      - name: Install dependencies
        working-directory: TheForce
        run: |
          julia --project=docs -e '
            using Pkg
            
            # Develop TheForce in the docs environment
            println("Developing TheForce...")
            Pkg.develop(PackageSpec(path="."))
            
            println("Running instantiate...")
            Pkg.instantiate()
            println("TheForce docs setup complete!")
          '
          
      - name: Build and deploy docs
        working-directory: TheForce
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: julia --project=docs docs/make.jl